<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Geek Funny]]></title>
  <subtitle><![CDATA[Keep calm and code on]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://www.geekfunny.com/"/>
  <updated>2014-05-28T04:08:19.715Z</updated>
  <id>http://www.geekfunny.com/</id>
  
  <author>
    <name><![CDATA[Geek Funny]]></name>
    <email><![CDATA[geekfunny@outlook.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[How to display current value at the right side of EditTextPreference and ListPreference]]></title>
    <link href="http://www.geekfunny.com/2014/05/26/how-to-display-current-value-at-the-right-side-of-edittextpreference-and-listpreference/"/>
    <id>http://www.geekfunny.com/2014/05/26/how-to-display-current-value-at-the-right-side-of-edittextpreference-and-listpreference/</id>
    <published>2014-05-26T06:15:12.000Z</published>
    <updated>2014-05-28T04:07:38.000Z</updated>
    <content type="html"><![CDATA[<p>This blog describe how to create a custom EditTextPreference or ListPreference to display the current value at the right side.<br><a id="more"></a></p>
<h2 id="Overview_">Overview  </h2>
<blockquote>
<p><a href="http://developer.android.com/guide/topics/ui/settings.html" target="_blank">Settings | Android Developer</a><br>Applications often include settings that allow users to modify app features and behaviors. For example, some apps allow users to specify whether notifications are enabled or specify how often the application syncs data with the cloud.  </p>
<p>If you want to provide settings for your app, you should use Android’s Preference APIs to build an interface that’s consistent with the user experience in other Android apps (including the system settings).  </p>
</blockquote>
<p>However, when you select in the popup preference list or edit in the popup edit dialog, the popup dismissed without any UI feedback in the preference screen, you can not see the current value of EditTextPreference and ListPreference by default.  </p>
<p>Instead of implementing onSharedPreferenceChanged to display the currently set value of the preference in the Preference summary, you can create a custom preference to display the current value at the right side of the EditTextPreference and ListPreference.  </p>
<p>The following sections describe how to create a custom EditTextPreference or ListPreference to display the current value at the right side.  </p>
<h2 id="Defining_custom_Preference_layout_in_XML_">Defining custom Preference layout in XML  </h2>
<p>Each Preference item in preference screen define its default layout in sdk/platforms/android-19/data/res/layout/preference.xml, create a new XML file named preference_with_value.xml under /layout directory and copy all content from default preference.xml, then add your custom value TextView after /RelativeLayout&gt; tag.  </p>
<p>preference_with_value.xml:  </p>
<pre><code>    <span class="tag">&lt;/<span class="title">RelativeLayout</span>&gt;</span>

    <span class="tag">&lt;<span class="title">TextView</span> <span class="attribute">android:id</span>=<span class="value">"@+id/pref_value"</span>
        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span>
        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span>
        <span class="attribute">android:layout_weight</span>=<span class="value">"10"</span>
        <span class="attribute">android:singleLine</span>=<span class="value">"true"</span>
        <span class="attribute">android:textAppearance</span>=<span class="value">"?android:attr/textAppearanceMedium"</span>
        <span class="attribute">android:gravity</span>=<span class="value">"right"</span>
        <span class="attribute">android:ellipsize</span>=<span class="value">"end"</span> /&gt;</span>

    <span class="comment">&lt;!-- Preference should place its actual preference widget here. --&gt;</span>
    <span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">android:id</span>=<span class="value">"@+android:id/widget_frame"</span>
        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span>
        <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>
        <span class="attribute">android:gravity</span>=<span class="value">"center_vertical"</span>
        <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span> /&gt;</span>

<span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span>  
</code></pre><h2 id="Creating_a_custom_EditTextPreference_class_">Creating a custom EditTextPreference class  </h2>
<p>To create your custom EditTextPreference class, you should call setLayoutResource to load your custom layout in the constructor method, and set the TextView in the override onBindView and setText method. For example:  </p>
<pre><code><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EditTextPreferenceWithValue</span> <span class="keyword">extends</span> <span class="title">EditTextPreference</span> {</span>
    <span class="keyword">private</span> TextView textValue;

    <span class="keyword">public</span> <span class="title">EditTextPreferenceWithValue</span>(Context context) {
        <span class="keyword">super</span>(context);
        setLayoutResource(R.layout.preference_with_value);
    }

    <span class="keyword">public</span> <span class="title">EditTextPreferenceWithValue</span>(Context context, AttributeSet attrs) {
        <span class="keyword">super</span>(context, attrs);
        setLayoutResource(R.layout.preference_with_value);
    }

    <span class="keyword">public</span> <span class="title">EditTextPreferenceWithValue</span>(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyle) {
        <span class="keyword">super</span>(context, attrs, defStyle);
        setLayoutResource(R.layout.preference_with_value);
    }

    <span class="annotation">@Override</span>
    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onBindView</span>(View view) {
        <span class="keyword">super</span>.onBindView(view);
        textValue = (TextView) view.findViewById(R.id.pref_value);
        <span class="keyword">if</span> (textValue != <span class="keyword">null</span>) {
            textValue.setText(getText());
        }
    }

    <span class="annotation">@Override</span>
    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setText</span>(String text) {
        <span class="keyword">super</span>.setText(text);
        <span class="keyword">if</span> (textValue != <span class="keyword">null</span>) {
            textValue.setText(getText());
        }
    }
}  
</code></pre><p>You can also create a custom ListPreference like the above code, and just change getText method to getValue.  </p>
<h2 id="Thinking_more_">Thinking more  </h2>
<p>There is another way to display the current value at the right side, you should just add this code to your activity:  </p>
<pre><code>final ListPreference listPref = <span class="keyword">...</span>
listPref.setLayoutResource(R.layout.preference_with_value);
listPref.setOnPreferenceChangeListener(new OnPreferenceChangeListener() {
    public boolean onPreferenceChange(Preference preference, Object newValue) {
        TextView textView = (TextView) findViewById(R.id.preference_value);
        int index = listPref.findIndexOfValue(newValue.toString());
        <span class="keyword">if</span> (index != -<span class="number">1</span>) {
            textView.setText(listPref.getEntries()[index]);
        }
        <span class="keyword">return</span> true;
    }
});  
</code></pre><p>Considering the data validation to EditTextPreference dialog, maybe a custom EditTextPreference is better than above code.  </p>
]]></content>
    <summary type="html"><![CDATA[<p>This blog describe how to create a custom EditTextPreference or ListPreference to display the current value at the right side.<br>]]></summary>
    
      <category term="Android" scheme="http://www.geekfunny.com/tags/Android/"/>
    
      <category term="移动开发" scheme="http://www.geekfunny.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
</feed>
